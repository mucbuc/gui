/* 
objective:
  create elements given a model and a factory 
  
note: 
  i'm starting to think this should be a function, one controller (model), one factory and one 
  product
*/ 

if (typeof Controller === 'undefined') {
  Controller = require( 'controller' ).Controller;
}

(function(Controller) {
  
  function Builder( controller, type ) {
    
    var elements = 0;
    
    this.makeElements = function( factory ) {
      
      if (controller.model instanceof Array) {
        elements = [];
        
        controller.model.forEach( function( element, index ) {
          
          var subController = new Controller( controller, index );
          elements.push( buildObject( type, subController ) );
        } );
      }  
      else if (type != undefined) {
        elements = buildObject( type, controller );
      }
      else
      {
        elements = {};
      
        for (var property in controller.model) {
          var subController = new Controller( controller, property )
            , builder = new Builder( subController, property );
          
          builder.makeElements( factory );
          elements[property] = builder.product;
        }
      }
      
      return this;
      
      function buildObject( type, controller ) {
        var obj = factory.create( type, controller, controller.model );
        return obj;
      }
    };
    
    this.__defineGetter__( 'product', function() { 
      return elements; 
    } );
    
  }
  
  exports.Builder = Builder;
  
})(Controller);
