if (typeof Builder === 'undefined') {
  Builder = require( 'builder' ).Builder;
}

(function(Builder) {
  
  function View( controller, factory ) {

    var instance = this
      , composite = null;

    Element.call( this );

    if (typeof controller !== 'undefined') {
      var builder = new Builder( factory );
      composite = builder.buildComposite( controller );
    }

    this.__defineGetter__( 'composite', function() { 
      return composite;
    });

    this.layoutVertical = function( top ) {
      var bottom = View.prototype.layoutVertical.call( this, top );
      for (component in instance.composite) {
        instance.composite[component].bounds.size = new Vec( 100, 80 );
        top = instance.composite[component].layoutVertical( top );
      }
      return bottom;
    };

    this.layoutHorizontal = function( left ) {
      var right = View.prototype.layoutHorizontal.call( this, left );
      for (component in instance.composite) {
        //instance.composite[component].bounds.size = new Vec( 100, 80 );
        left = instance.composite[component].layoutHorizontal( left );
      }
      return right;
    };
  }

  View.prototype = new Element();

  exports.View = View;
  
})(Builder);