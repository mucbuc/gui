if (typeof(sign) === 'undefined') {
  require( 'utils.js' )
}

(function(){

  function Rect( p, d ) {
    this.position = p;
    this.diagonal = d;
  }
  
  Rect.prototype = {
    
    left: function() {
      var p = this.position.add( this.diagonal );
      return p.x > this.position.x ? this.position.x : p.x;
    },
    top: function() {
      var p = this.position.add( this.diagonal );
      return p.y > this.position.y ? this.position.y : p.y;
    },
    right: function() {
      var p = this.position.add( this.diagonal );
      return p.x < this.position.x ? this.position.x : p.x;
    },
    bottom: function() {
      var p = this.position.add( this.diagonal );
      return p.y < this.position.y ? this.position.y : p.y;
    },
    width: function() {
      return Math.abs( this.diagonal.x );
    },
    height: function() {
      return Math.abs( this.diagonal.y );
    },
    isIntersecting: function( vec ) {
      var diff = vec.sub( this.position );
      return sign( diff.x ) == sign( this.diagonal.x )
          && Math.abs( diff.x ) <= Math.abs( this.diagonal.x )
          && sign( diff.y ) == sign( this.diagonal.y )
          && Math.abs( diff.y ) <= Math.abs( this.diagonal.y );
    },
    clone: function() {
      return new Rect( this.position.clone(), this.diagonal.clone() );
    }
  };
  
  exports.Rect = Rect;
  
} )();
